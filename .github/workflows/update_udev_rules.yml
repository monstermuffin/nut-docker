name: Update udev rules file

on:
  push:
    branches: ['main']
    paths: [Dockerfile]
  workflow_dispatch:

jobs:
  dump_udev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      IMAGE_NAME: nut-upsd:latest
      RULES_FILE: example_confs/etc/udev/rules.d/62-nut-usbups.rules
      NUT_GID: 101
    steps:
      - uses: actions/checkout@v4

      - name: Build image
        run: |
          docker build -t $IMAGE_NAME .

      - name: Dump udev rules
        run: |
          docker run --rm $IMAGE_NAME dump-udev-rules > $RULES_FILE
          sed -i "s/GROUP=\"nut\"/GROUP=\"$NUT_GID\"/g" $RULES_FILE
          echo "# RULES FILE START"
          cat $RULES_FILE
          echo "# RULES FILE END"
          if [ ! -s $RULES_FILE ]; then
            echo "::error title=Failed to dump udev rules::Rules file was found empty."
          fi

      - name: Update udev rules
      # Yoinked from my slightly cursed workflow here: https://github.com/rHomelab/Red-DiscordBot-Docker/blob/main/.github/workflows/redbot-args-update.yml.
        run: |
          if git status | grep -q 'Changes not staged for commit' ; then
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add "$RULES_FILE"
            git commit -m "Update NUT udev rules"
            git push

            echo -e "# NUT udev rules have been updated.\n\nSee [${RULES_FILE##*/}](https://github.com/${GITHUB_REPOSITORY}/blob/main/${RULES_FILE})" >> $GITHUB_STEP_SUMMARY
          else
            echo -e "# NUT udev rules are already up to date.\n\nSee [${RULES_FILE##*/}](https://github.com/${GITHUB_REPOSITORY}/blob/main/${RULES_FILE})" >> $GITHUB_STEP_SUMMARY
          fi
